import{bw as O,u as d,ag as P,U as u,bx as c,by as x,bz as g,bA as N,bB as w,bC as S,bD as B,bE as f,bF as h,bG as E}from"./index.72f9f2f4.js";import{c as F,a as $}from"./devEnvironmentUtils.31af846a.js";function G(e,t,a,l){return e.name?e.styleName&&e.styleName==="Esri2DPointSymbolsStyle"?z(e,t,l):O(e,t,l).then(o=>v(o,e.name,t,a,l)):Promise.reject(new d("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function v(e,t,a,l,o){const b=e.data,y={portal:a&&a.portal||P.getDefault(),url:u(e.baseUrl),origin:"portal-item"},s=b.items.find(r=>r.name===t);if(!s){const r=`The symbol name '${t}' could not be found`;return Promise.reject(new d("symbolstyleutils:symbol-name-not-found",r,{symbolName:t}))}let m=c(x(s,l),y),i=s.thumbnail&&s.thumbnail.href;const p=s.thumbnail&&s.thumbnail.imageData;F()&&(m=$(m),i=$(i));const U={portal:a.portal,url:u(g(m)),origin:"portal-item"};return N(m,o).then(r=>{const j=l==="cimRef"?w(r.data):r.data,n=S(j,U);if(n&&B(n)){if(i){const D=c(i,y);n.thumbnail=new f({url:D})}else p&&(n.thumbnail=new f({url:`data:image/png;base64,${p}`}));e.styleUrl?n.styleOrigin=new h({portal:a.portal,styleUrl:e.styleUrl,name:t}):e.styleName&&(n.styleOrigin=new h({portal:a.portal,styleName:e.styleName,name:t}))}return n})}function z(e,t,a){const l=E.replace(/\{SymbolName\}/gi,e.name);return N(l,a).then(o=>{const b=w(o.data);return S(b,{portal:t.portal,url:u(g(l)),origin:"portal-item"})})}export{v as fetchSymbolFromStyle,G as resolveWebStyleSymbol};
